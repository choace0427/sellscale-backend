"""Make ICP scoring ruleset table have a primary key ID

Revision ID: e4a2af977467
Revises: 8ec758419056
Create Date: 2024-08-01 18:31:53.666593

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4a2af977467'
down_revision = '8ec758419056'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('icp_scoring_ruleset', sa.Column('id', sa.Integer(), nullable=True, autoincrement=True))

    # Populate the new id column with unique values for existing rows
    op.execute('''
        CREATE SEQUENCE icp_scoring_ruleset_id_seq;
        UPDATE icp_scoring_ruleset SET id = nextval('icp_scoring_ruleset_id_seq');
    ''')

    op.alter_column('icp_scoring_ruleset', 'id', existing_type=sa.INTEGER, nullable=False)

    op.drop_constraint('icp_scoring_ruleset_pkey', 'icp_scoring_ruleset', type_='primary')
    op.alter_column('icp_scoring_ruleset', 'client_archetype_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_primary_key('icp_scoring_ruleset_pkey', 'icp_scoring_ruleset', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('icp_scoring_ruleset_pkey', 'icp_scoring_ruleset', type_='primary')
    op.alter_column('icp_scoring_ruleset', 'client_archetype_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_primary_key('icp_scoring_ruleset_pkey', 'icp_scoring_ruleset', ['client_archetype_id'])
    op.drop_column('icp_scoring_ruleset', 'id')
    op.execute('''
    DROP SEQUENCE icp_scoring_ruleset_id_seq;
    ''')
    # ### end Alembic commands ###
