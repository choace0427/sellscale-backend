"""Made all ICP scoring ruleset fields nullable

Revision ID: 03475934fa5c
Revises: 232dc3a55152
Create Date: 2023-08-24 14:44:20.728261

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "03475934fa5c"
down_revision = "232dc3a55152"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_title_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_title_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_industry_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_industry_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "individual_years_of_experience_start",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "individual_years_of_experience_end",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_skills_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_skills_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_name_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_name_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "company_size_start",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "company_size_end",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_industries_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_industries_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_industries_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_industries_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "company_size_end",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "company_size_start",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_company_name_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_company_name_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_generalized_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_locations_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_skills_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_skills_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "individual_years_of_experience_end",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "individual_years_of_experience_start",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_industry_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_industry_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "excluded_individual_title_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "icp_scoring_ruleset",
        "included_individual_title_keywords",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    # ### end Alembic commands ###
