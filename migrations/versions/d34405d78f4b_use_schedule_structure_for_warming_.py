"""Use schedule structure for warming instead of enum structure

Revision ID: d34405d78f4b
Revises: 82694f2ef483
Create Date: 2023-09-05 17:17:00.437105

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd34405d78f4b'
down_revision = '82694f2ef483'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('warmup_linkedin_sla_change',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_sdr_id', sa.Integer(), nullable=True),
    sa.Column('old_sla_value', sa.Integer(), nullable=True),
    sa.Column('new_sla_value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_sdr_id'], ['client_sdr.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('warmup_schedule_linkedin',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_sdr_id', sa.Integer(), nullable=True),
    sa.Column('week_0_sla', sa.Integer(), nullable=False),
    sa.Column('week_1_sla', sa.Integer(), nullable=False),
    sa.Column('week_2_sla', sa.Integer(), nullable=False),
    sa.Column('week_3_sla', sa.Integer(), nullable=False),
    sa.Column('week_4_sla', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_sdr_id'], ['client_sdr.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('linkedin_warmup_status_change')
    op.add_column('client_sdr', sa.Column('warmup_linkedin_complete', sa.Boolean(), nullable=True))
    op.drop_column('client_sdr', 'linkedin_warmup_status')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('client_sdr', sa.Column('linkedin_warmup_status', postgresql.ENUM('WARM_UP_5', 'WARM_UP_25', 'WARM_UP_50', 'WARM_UP_75', 'WARM_UP_90', 'CUSTOM_WARM_UP', name='linkedinwarmupstatus'), autoincrement=False, nullable=True))
    op.drop_column('client_sdr', 'warmup_linkedin_complete')
    op.create_table('linkedin_warmup_status_change',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_sdr_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('old_status', postgresql.ENUM('WARM_UP_5', 'WARM_UP_25', 'WARM_UP_50', 'WARM_UP_75', 'WARM_UP_90', 'CUSTOM_WARM_UP', name='linkedinwarmupstatus'), autoincrement=False, nullable=True),
    sa.Column('old_sla_value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('new_status', postgresql.ENUM('WARM_UP_5', 'WARM_UP_25', 'WARM_UP_50', 'WARM_UP_75', 'WARM_UP_90', 'CUSTOM_WARM_UP', name='linkedinwarmupstatus'), autoincrement=False, nullable=False),
    sa.Column('new_sla_value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_sdr_id'], ['client_sdr.id'], name='linkedin_warmup_status_change_client_sdr_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='linkedin_warmup_status_change_pkey')
    )
    op.drop_table('warmup_schedule_linkedin')
    op.drop_table('warmup_linkedin_sla_change')
    # ### end Alembic commands ###
